
application.properties:
	mybatis.type-aliases-package=com.neo.entity //对应实体类的包名
 
	spring.datasource.driverClassName = com.mysql.jdbc.Driver
	spring.datasource.url = jdbc:mysql://localhost:3306/test1?useUnicode=true&characterEncoding=utf-8
	spring.datasource.username = root
	spring.datasource.password = root
	
------------------------------------------------------------------------------------------	
启动类加注解,包扫描:	
	@SpringBootApplication
	@MapperScan("com.neo.mapper")
	public class Application {
	 
		public static void main(String[] args) {
			SpringApplication.run(Application.class, args);
		}
	}
------------------------------------------------------------------------------------------
mapper:
	public interface UserMapper {
		
		@Select("SELECT * FROM users")
		@Results({
			@Result(property = "userSex",  column = "user_sex", javaType = UserSexEnum.class),
			@Result(property = "nickName", column = "nick_name")
		})
		List<UserEntity> getAll();
		
		@Select("SELECT * FROM users WHERE id = #{id}")
		@Results({
			@Result(property = "userSex",  column = "user_sex", javaType = UserSexEnum.class),
			@Result(property = "nickName", column = "nick_name")
		})
		UserEntity getOne(Long id);
	 
		@Insert("INSERT INTO users(userName,passWord,user_sex) VALUES(#{userName}, #{passWord}, #{userSex})")
		void insert(UserEntity user);
	 
		@Update("UPDATE users SET userName=#{userName},nick_name=#{nickName} WHERE id =#{id}")
		void update(UserEntity user);
	 
		@Delete("DELETE FROM users WHERE id =#{id}")
		void delete(Long id);
	 
	}
	------------------------------------------------------------------------------------------
	package com.example.datawash.config;

import com.mchange.v2.c3p0.ComboPooledDataSource;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.*;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.datasource.DataSourceTransactionManager;
import org.springframework.stereotype.Controller;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.PlatformTransactionManager;
import org.springframework.transaction.annotation.EnableTransactionManagement;

import javax.sql.DataSource;
import java.beans.PropertyVetoException;

/**
 * @author wg
 * @Package com.example.datawash.config
 * @date 2019/12/10 11:50
 * @Copyright
 */

@EnableTransactionManagement
@ComponentScan(
  value = "com.example.datawash",
  includeFilters = {
    @ComponentScan.Filter(
      type = FilterType.ANNOTATION,
      classes = {
        Repository.class
      }
    )
  },
  excludeFilters = {
    @ComponentScan.Filter(
      type = FilterType.ANNOTATION,
      classes ={
        Controller.class
    }
    )
  }
)
@PropertySource(value = {"classpath:/mysqlconfig.properties"})
@Configuration
public class MysqlConectConfig {

    @Value("${db.user}")
    private String user;

    @Value("${db.password}")
    private String password;

    @Value("${db.url}")
    private String jdbcUrl;

    @Value("${db.driver}")
    private String driverClass;

    // 数据源
    @Bean
    public DataSource getDataSource() throws PropertyVetoException {
        ComboPooledDataSource dataSource = new ComboPooledDataSource();
        dataSource.setUser(user);
        dataSource.setPassword(password);
        dataSource.setJdbcUrl(jdbcUrl);
        dataSource.setDriverClass(driverClass);
        return dataSource;
    }

    @Bean
    public JdbcTemplate getJdbcTemplate() throws PropertyVetoException {

        JdbcTemplate jdbcTemplate = new JdbcTemplate(getDataSource());
        return jdbcTemplate;
    }


    // 注册事务 到 容器中
    @Bean
    public PlatformTransactionManager getPlatformTransactionManager() throws PropertyVetoException {

        DataSourceTransactionManager dataSourceTransactionManager =
          new DataSourceTransactionManager(getDataSource());
        return dataSourceTransactionManager;
    }
}
